# Using YAMLs Block Literals to preserve new lines
# http://en.wikipedia.org/wiki/YAML#Newlines_preserved
# In short, |  means keep new lines, trim whitespace left and right
# The |- does the above, but trims the new line at the end of all text

:box_already_exists: |-
  This box appears to already exist! Please call `vagrant box remove <%= box_name %>`
  and then try to add it again.
:box_add_already_exists: |-
  A box with the name '<%= box_name %>' already exists, please use another name or use `vagrant box remove <%= box_name %>`
:box_download_unknown_type: |-
  Unknown URI type for box download.
:box_remove_doesnt_exist: |-
  The box you're attempting to remove does not exist!
:box_specified_doesnt_exist: |-
  Specified box `<%= box_name %>` does not exist!

  The box must be added through the `vagrant box add` command. Please view
  the documentation associated with the command for more information.
:box_not_specified: |-
  No base box was specified! A base box is required as a staring point
  for every vagrant virtual machine. Please specify one in your Vagrantfile
  using `config.vm.box`
:chef_base_invalid_provisioner: |-
  Vagrant::Provisioners::Chef is not a valid provisioner! Use ChefSolo or ChefServer instead.
:chef_server_url_required: |-
  Chef server provisioning requires that the `config.chef.chef_server_url` be set to the
  URL of your chef server. Examples include "http://12.12.12.12:4000" and
  "http://myserver.com:4000" (the port of course can be different, but 4000 is the default)
:chef_server_validation_key_required: |-
  Chef server provisioning requires that the `config.chef.validation_key_path` configuration
  be set to a path on your local machine of the validation key used to register the
  VM with the chef server.
:chef_server_validation_key_doesnt_exist: |-
  The validation key set for `config.chef.validation_key_path` does not exist! This
  file needs to exist so it can be uploaded to the virtual machine. It is
  currently set to "<%= Vagrant.config.chef.validation_key_path %>"
:command_box_invalid: |-
  Please specify a valid action to take on the boxes, either
  `add` or `remove`. Examples:

  vagrant box add name uri
  vagrant box remove name
  vagrant box list
:command_deprecation_down: |-
  `vagrant down` is now `vagrant destroy`. Please use that command instead. This
  warning will be removed in future versions.
:dotfile_error: |-
  The dotfile which Vagrant uses to store the UUID of the project's
  virtual machine already exists and is not a file! The dotfile is
  currently configured to be `<%= env.dotfile_path %>`

  To change this value, please see `config.vagrant.dotfile_name`

  Are you trying to use Vagrant from your home directory? This is the
  leading cause of this error message. To resolve this, simply use a
  different directory. Or, if you really want to run Vagrant from your
  home directory, modify the `config.vagrant.dotfile_name` configuration
  key.
:downloader_file_doesnt_exist: |-
  The given box does not exist on the file system:

  <%= source_url %>
:environment_not_created: |-
  The task you're trying to run requires that the vagrant environment
  already be created, but unfortunately this vagrant still appears to
  have no box! You can setup the environment by setting up your
  <%= Vagrant::Environment::ROOTFILE_NAME %> and running `vagrant up`
:package_include_file_doesnt_exist: |-
  File specified to include: '<%= filename %>' does not exist!
:package_requires_export: |-
  Package must be used in conjunction with export.
:provisioner_invalid_class: |-
  Provisioners must be an instance of Vagrant::Provisioners::Base
:provisioner_unknown_type: |-
  Unknown provisioner type: <%= provisioner %>
:rootfile_already_exists: |-
  It looks like this directory is already setup for vagrant! (A <%= Vagrant::Environment::ROOTFILE_NAME %>
  already exists.)
:rootfile_not_found: |-
  A `<%= Vagrant::Environment::ROOTFILE_NAME %>` was not found! This file is required for vagrant to run
  since it describes the expected environment that vagrant is supposed
  to manage. Please create a `<%= Vagrant::Environment::ROOTFILE_NAME %>` and place it in your project
  root.
:ssh_bad_permissions: |-
  The private key to connect to this box via SSH has invalid permissions
  set on it. The permissions of the private key should be set to 0600, otherwise SSH will
  ignore the key. Vagrant tried to do this automatically for you but failed. Please set the
  permissions on the following file to 0600 and then try running this command again:

  <%= key_path %>
:ssh_unavailable_windows: |-
  `vagrant ssh` isn't available on the Windows platform. The
  vagrant.ppk file is available at

     <%= key_path %>.ppk

  for use with Putty. To do this create a new Putty session for
  `vagrant@localhost` on port `<%= ssh_port %>`, in the Connection>SSH>Auth
  configuration section navigate to the vagrant.ppk file,
  select it, save the session for later use, and connect.

  For a more detailed guide please consult:

     http://vagrantup.com/docs/getting-started/windows.html

:virtualbox_import_failure: |-
  The VM import failed! Try running `VBoxManage import` on the box file
  manually for more verbose error output.
:virtualbox_invalid_version: |-
  Vagrant has detected that you have VirtualBox version <%= version %> installed!
  Vagrant requires that you use at least VirtualBox version 3.1. Please install
  a more recent version of VirtualBox to continue.
:virtualbox_not_detected: |-
  Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed.
  If VirtualBox is installed, it may be an incorrect version. Vagrant currently
  only supports VirtualBox 3.1.x. Please install the proper version to continue.
:vm_failed_to_boot: |-
  Failed to connect to VM! Failed to boot?
:vm_base_not_found: |-
  The specified base VM "<%= name %>" was not found.
:vm_not_running: |-
  VM is not running! Nothing to shut down!
:vm_not_running_for_suspend: |-
  The vagrant virtual environment you are trying to suspend must be running to be suspended.
:vm_not_suspended: |-
  The vagrant virtual environment you are trying to resume is not in a suspended state.
:vm_port_collision: |-
  Vagrant cannot forward the specified ports on this VM, since they
  would collide with another VirtualBox virtual machine's forwarded
  ports! The "<%= name %>" forwarded port (<%= hostport %>) is already in use on the host
  machine.

  To fix this, modify your current projects Vagrantfile to use another
  port. Example, where '1234' would be replaced by a unique host port:

  config.vm.forward_port("<%= name %>", <%= guestport %>, 1234)
:vm_power_off_to_move_hd: |-
  The virtual machine must be powered off to move its disk.
:vm_power_off_to_package: |-
  The vagrant virtual environment you are trying to package must be powered off.
:vm_mount_fail: |-
  Failed to mount shared folders. vboxsf was not available.
:vm_ssh_auth_failed: |-
  SSH authentication failed! While this could be due to a variety of reasons,
  the two most common are: private key path is incorrect or you're using a box
  which was built for Vagrant 0.1.x.

  Vagrant 0.2.x dropped support for password-based authentication. If you're
  tring to `vagrant up` a box which does not support Vagrant's private/public
  keypair, then this error will be raised. To resolve this, read the guide
  on converting base boxes from password-based to keypairs here:

  http://vagrantup.com/docs/converting_password_to_key_ssh.html

  If the box was built for 0.2.x and contains a custom public key, perhaps
  the path to the private key is incorrect. Check your `config.ssh.private_key_path`.
